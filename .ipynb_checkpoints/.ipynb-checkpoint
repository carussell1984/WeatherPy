{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# WeatherPy\n",
    "----\n",
    "\n",
    "#### Note\n",
    "* Instructions have been included for each segment. You do not have to follow them exactly, but they are included to help you think through the steps."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Dependencies and Setup\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import requests\n",
    "import time\n",
    "\n",
    "# Import API key\n",
    "from api_keys import api_key\n",
    "\n",
    "# Incorporated citipy to determine city based on latitude and longitude\n",
    "from citipy import citipy\n",
    "\n",
    "# Output File (CSV)\n",
    "output_data_file = \"output_data/cities.csv\"\n",
    "\n",
    "# Range of latitudes and longitudes\n",
    "lat_range = (-90, 90)\n",
    "lng_range = (-180, 180)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate Cities List"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "602\n",
      "['san patricio', 'erenhot', 'saint-philippe', 'kodiak', 'westport', 'kita', 'esperance', 'punta arenas', 'airai', 'sataua', 'muisne', 'mataura', 'bourail', 'hobart', 'luderitz', 'alta floresta', 'thompson', 'taolanaro', 'vaini', 'morgan city', 'chokurdakh', 'port alfred', 'mar del plata', 'nanortalik', 'caribou', 'hilo', 'te anau', 'sao filipe', 'bac lieu', 'talnakh', 'avarua', 'yatou', 'hofn', 'san javier', 'busselton', 'tasiilaq', 'nueva loja', 'mahebourg', 'new norfolk', 'victoria point', 'khonuu', 'narsaq', 'cherbourg', 'ostrovnoy', 'loubomo', 'kaeo', 'mount isa', 'aklavik', 'nueva helvecia', 'atuona', 'cherskiy', 'albany', 'harstad', 'vysokogornyy', 'rikitea', 'morrelganj', 'clarksdale', 'ancud', 'sorvag', 'isangel', 'cozumel', 'naze', 'arraial do cabo', 'okhotsk', 'lemesos', 'bredasdorp', 'rabat', 'castro', 'isabela', 'karoi', 'puerto ayora', 'batticaloa', 'ribeira grande', 'oakdale', 'sitka', 'lompoc', 'boa vista', 'teya', 'chuy', 'bethel', 'attawapiskat', 'upata', 'plettenberg bay', 'kwinana', 'kapaa', 'ushuaia', 'saint-augustin', 'ilulissat', 'iranshahr', 'ambalavao', 'barrow', 'hihifo', 'tiksi', 'raudeberg', 'pacific grove', 'smolenka', 'mitsamiouli', 'bengkulu', 'mogzon', 'saint george', 'bluff', 'butaritari', 'meadow lake', 'labrea', 'aplahoue', 'zemio', 'qaanaaq', 'lebu', 'amahai', 'provideniya', 'eureka', 'yokadouma', 'bagno a ripoli', 'port moresby', 'mildura', 'leningradskiy', 'hermanus', 'sylacauga', 'illoqqortoormiut', 'nikki', 'norman wells', 'kruisfontein', 'komsomolskiy', 'dikson', 'acari', 'awbari', 'upernavik', 'hamilton', 'faanui', 'clyde river', 'olafsvik', 'samarai', 'carnarvon', 'aizpute', 'cape town', 'georgetown', 'la ronge', 'vao', 'hellvik', 'belushya guba', 'tuatapere', 'durres', 'sudak', 'tsihombe', 'palabuhanratu', 'yaan', 'mys shmidta', 'torbay', 'bandar-e lengeh', 'qasigiannguit', 'camacha', 'hoi an', 'nizhneyansk', 'caravelas', 'brookhaven', 'yellowknife', 'turtkul', 'taonan', 'omaruru', 'kavieng', 'quatre cocos', 'bambous virieux', 'lakatoro', 'souillac', 'lolua', 'longyearbyen', 'santa rosa', 'zhigansk', 'port elizabeth', 'onguday', 'kouroussa', 'grand river south east', 'lagoa', 'kobayashi', 'hasaki', 'camocim', 'mount gambier', 'cairns', 'mountain home', 'nikolskoye', 'san cristobal', 'tautira', 'saleaula', 'sibolga', 'kaman', 'barentsburg', 'temaraia', 'meulaboh', 'sorland', 'sao joao da barra', 'east london', 'hendijan', 'sentyabrskiy', 'fairbanks', 'marshall', 'namibe', 'port blair', 'tuktoyaktuk', 'palmer', 'saint anthony', 'sinnamary', 'mitu', 'mudyuga', 'pangnirtung', 'chapais', 'nioro', 'taft', 'amderma', 'bulgan', 'lata', 'saskylakh', 'belaya gora', 'honiara', 'ara', 'iskateley', 'hithadhoo', 'cabedelo', 'gat', 'iqaluit', 'darnah', 'whitianga', 'sompeta', 'kieta', 'keller', 'dawlatabad', 'natal', 'vostok', 'aybak', 'cayenne', 'preobrazheniye', 'mullaitivu', 'dunedin', 'paradwip', 'bechyne', 'oranjemund', 'deputatskiy', 'vardo', 'ucluelet', 'saryshagan', 'constitucion', 'samusu', 'moyale', 'brae', 'havoysund', 'jamestown', 'seymchan', 'strezhevoy', 'vernon', 'portland', 'klaksvik', 'horsham', 'marsa matruh', 'mullingar', 'madaoua', 'nabire', 'north myrtle beach', 'havre-saint-pierre', 'rocha', 'half moon bay', 'darovskoy', 'guerrero negro', 'sur', 'qaqortoq', 'ixtapa', 'avera', 'port augusta', 'hambantota', 'dicabisagan', 'santa cruz', 'the valley', 'hornepayne', 'baykit', 'venice', 'beyneu', 'neuquen', 'okha', 'banjar', 'nimaj', 'akom', 'mehamn', 'puerto escondido', 'manzanillo', 'anito', 'khandyga', 'ola', 'arcachon', 'vila', 'tubruq', 'saint-joseph', 'tres arroyos', 'catamarca', 'nagua', 'victoria', 'sarangani', 'grindavik', 'yulara', 'gangotri', 'khatanga', 'cockburn town', 'umm lajj', 'gravdal', 'manokwari', 'chadiza', 'bouca', 'olga', 'grand centre', 'hualmay', 'acapulco', 'zhezkazgan', 'yablonovo', 'necochea', 'kholm', 'kabwe', 'banda aceh', 'bartica', 'adrar', 'arman', 'ajaccio', 'evensk', 'aksha', 'ust-omchug', 'klyuchi', 'kota kinabalu', 'rafai', 'husavik', 'kahului', 'kushmurun', 'caninde de sao francisco', 'mustasaari', 'alice springs', 'ampanihy', 'waitakere', 'kaitangata', 'kabelvag', 'kanniyakumari', 'manama', 'santa isabel', 'abonnema', 'paamiut', 'abu samrah', 'kozhva', 'progreso', 'sioux lookout', 'eirunepe', 'masuguru', 'dalmatovo', 'bargal', 'geraldton', 'neftcala', 'waddan', 'ulundi', 'solnechnyy', 'beloha', 'aktau', 'sobolevo', 'caraguatay', 'flinders', 'myaundzha', 'itaituba', 'sabha', 'salisbury', 'xining', 'buala', 'popondetta', 'cabo san lucas', 'susangerd', 'juneau', 'mrirt', 'tumannyy', 'buchanan', 'la palma', 'suda', 'asmara', 'vila velha', 'hokitika', 'mgachi', 'east wenatchee bench', 'northam', 'praya', 'lavrentiya', 'margate', 'carballo', 'tecoanapa', 'lakshettipet', 'bubaque', 'mason city', 'severo-kurilsk', 'chagda', 'touros', 'bongandanga', 'loikaw', 'presidencia roque saenz pena', 'setermoen', 'broome', 'monywa', 'nunspeet', 'tikri', 'sakakah', 'magadan', 'fort-shevchenko', 'riyadh', 'yarim', 'grand gaube', 'salalah', 'jaciara', 'katsuura', 'bejar', 'cap malheureux', 'kurilsk', 'kolpashevo', 'lodja', 'saldanha', 'tingi', 'lypnyazhka', 'fortuna', 'bousso', 'ponta do sol', 'zyryanka', 'lazaro cardenas', 'lorengau', 'pontianak', 'vila franca do campo', 'waingapu', 'yantal', 'marcona', 'beira', 'yanaul', 'kavaratti', 'tendukheda', 'okakarara', 'ler', 'pisco', 'anyama', 'maragogi', 'contamana', 'kloulklubed', 'xam nua', 'lopatino', 'henties bay', 'marawi', 'faya', 'severnyy', 'vallenar', 'kununurra', 'leshukonskoye', 'yenagoa', 'san jose', 'cantaura', 'romitan', 'pangody', 'limbang', 'bayji', 'quelimane', 'padang', 'olkhovka', 'taoudenni', 'aktash', 'lyaskelya', 'manadhoo', 'rancho palos verdes', 'pindushi', 'kamenskoye', 'vestbygda', 'rio gallegos', 'caconda', 'jujuy', 'clacton-on-sea', 'zatoka', 'greenland', 'gusino', 'urusha', 'port-gentil', 'lasa', 'tierranueva', 'port dickson', 'tambovka', 'sharjah', 'guipavas', 'buraydah', 'todos santos', 'bathsheba', 'wufeng', 'galgani', 'omboue', 'yerbogachen', 'tallahassee', 'marsaxlokk', 'tuggurt', 'gulfport', 'visegrad', 'vilcun', 'borisoglebsk', 'ilinge', 'coos bay', 'atambua', 'pimentel', 'merrill', 'beringovskiy', 'bogomila', 'benghazi', 'yabrud', 'mogochin', 'chabahar', 'egvekinot', 'ylojarvi', 'kouqian', 'korla', 'barahona', 'marfino', 'gornyy', 'jamshedpur', 'sao gabriel da cachoeira', 'hay river', 'dorado', 'orlik', 'wilmington', 'robertsport', 'codrington', 'coahuayana', 'uige', 'kajaani', 'san lorenzo', 'clarence town', 'bafata', 'banka', 'itarema', 'gazimagusa', 'ekhabi', 'goderich', 'menongue', 'moerai', 'falun', 'tomatlan', 'garh maharaja', 'salaga', 'coihaique', 'ojinaga', 'ormara', 'vinzili', 'bonavista', 'astoria', 'agadez', 'mocambique', 'bagdarin', 'tome', 'high level', 'honningsvag', 'biak', 'ahipara', 'pochutla', 'nishihara', 'kirakira', 'moses lake', 'evans', 'bima', 'barcelos', 'bauchi', 'khash', 'tabiauea', 'mzimba', 'kendari', 'sola', 'pevek', 'gladstone', 'impfondo', 'kargasok', 'nouadhibou', 'kenai', 'comodoro rivadavia', 'slave lake', 'hurghada', 'maracaju', 'biltine', 'torbat-e jam', 'la paz', 'campo verde', 'atar', 'ballina', 'ardakan', 'badou', 'basco', 'saurimo', 'itaqui', 'sechura', 'nizhniy kuranakh', 'kardla', 'clinton', 'bere', 'mahajanga', 'namatanai', 'sitio novo do tocantins', 'musoma', 'kamenka', 'luwuk', 'ponta delgada', 'bam', 'sofiysk', 'hinton', 'bandarbeyla', 'sinop', 'salamanca', 'manggar']\n"
     ]
    }
   ],
   "source": [
    "# List for holding lat_lngs and cities\n",
    "lat_lngs = []\n",
    "cities = []\n",
    "\n",
    "# Create a set of random lat and lng combinations\n",
    "lats = np.random.uniform(low=-90.000, high=90.000, size=1500)\n",
    "lngs = np.random.uniform(low=-180.000, high=180.000, size=1500)\n",
    "lat_lngs = zip(lats, lngs)\n",
    "\n",
    "# Identify nearest city for each lat, lng combination\n",
    "for lat_lng in lat_lngs:\n",
    "    city = citipy.nearest_city(lat_lng[0], lat_lng[1]).city_name\n",
    "    \n",
    "    # If the city is unique, then add it to a our cities list\n",
    "    if city not in cities:\n",
    "        cities.append(city)\n",
    "\n",
    "# Print the city count to confirm sufficient count\n",
    "print(len(cities))\n",
    "print(cities)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Perform API Calls\n",
    "* Perform a weather check on each city using a series of successive API calls.\n",
    "* Include a print log of each city as it'sbeing processed (with the city number and city name).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(cities)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['san+patricio', 'erenhot', 'saint-philippe', 'kodiak', 'westport', 'kita', 'esperance', 'punta+arenas', 'airai', 'sataua', 'muisne', 'mataura', 'bourail', 'hobart', 'luderitz', 'alta+floresta', 'thompson', 'taolanaro', 'vaini', 'morgan+city', 'chokurdakh', 'port+alfred', 'mar+del+plata', 'nanortalik', 'caribou', 'hilo', 'te+anau', 'sao+filipe', 'bac+lieu', 'talnakh', 'avarua', 'yatou', 'hofn', 'san+javier', 'busselton', 'tasiilaq', 'nueva+loja', 'mahebourg', 'new+norfolk', 'victoria+point', 'khonuu', 'narsaq', 'cherbourg', 'ostrovnoy', 'loubomo', 'kaeo', 'mount+isa', 'aklavik', 'nueva+helvecia', 'atuona', 'cherskiy', 'albany', 'harstad', 'vysokogornyy', 'rikitea', 'morrelganj', 'clarksdale', 'ancud', 'sorvag', 'isangel', 'cozumel', 'naze', 'arraial+do+cabo', 'okhotsk', 'lemesos', 'bredasdorp', 'rabat', 'castro', 'isabela', 'karoi', 'puerto+ayora', 'batticaloa', 'ribeira+grande', 'oakdale', 'sitka', 'lompoc', 'boa+vista', 'teya', 'chuy', 'bethel', 'attawapiskat', 'upata', 'plettenberg+bay', 'kwinana', 'kapaa', 'ushuaia', 'saint-augustin', 'ilulissat', 'iranshahr', 'ambalavao', 'barrow', 'hihifo', 'tiksi', 'raudeberg', 'pacific+grove', 'smolenka', 'mitsamiouli', 'bengkulu', 'mogzon', 'saint+george', 'bluff', 'butaritari', 'meadow+lake', 'labrea', 'aplahoue', 'zemio', 'qaanaaq', 'lebu', 'amahai', 'provideniya', 'eureka', 'yokadouma', 'bagno+a+ripoli', 'port+moresby', 'mildura', 'leningradskiy', 'hermanus', 'sylacauga', 'illoqqortoormiut', 'nikki', 'norman+wells', 'kruisfontein', 'komsomolskiy', 'dikson', 'acari', 'awbari', 'upernavik', 'hamilton', 'faanui', 'clyde+river', 'olafsvik', 'samarai', 'carnarvon', 'aizpute', 'cape+town', 'georgetown', 'la+ronge', 'vao', 'hellvik', 'belushya+guba', 'tuatapere', 'durres', 'sudak', 'tsihombe', 'palabuhanratu', 'yaan', 'mys+shmidta', 'torbay', 'bandar-e+lengeh', 'qasigiannguit', 'camacha', 'hoi+an', 'nizhneyansk', 'caravelas', 'brookhaven', 'yellowknife', 'turtkul', 'taonan', 'omaruru', 'kavieng', 'quatre+cocos', 'bambous+virieux', 'lakatoro', 'souillac', 'lolua', 'longyearbyen', 'santa+rosa', 'zhigansk', 'port+elizabeth', 'onguday', 'kouroussa', 'grand+river+south+east', 'lagoa', 'kobayashi', 'hasaki', 'camocim', 'mount+gambier', 'cairns', 'mountain+home', 'nikolskoye', 'san+cristobal', 'tautira', 'saleaula', 'sibolga', 'kaman', 'barentsburg', 'temaraia', 'meulaboh', 'sorland', 'sao+joao+da+barra', 'east+london', 'hendijan', 'sentyabrskiy', 'fairbanks', 'marshall', 'namibe', 'port+blair', 'tuktoyaktuk', 'palmer', 'saint+anthony', 'sinnamary', 'mitu', 'mudyuga', 'pangnirtung', 'chapais', 'nioro', 'taft', 'amderma', 'bulgan', 'lata', 'saskylakh', 'belaya+gora', 'honiara', 'ara', 'iskateley', 'hithadhoo', 'cabedelo', 'gat', 'iqaluit', 'darnah', 'whitianga', 'sompeta', 'kieta', 'keller', 'dawlatabad', 'natal', 'vostok', 'aybak', 'cayenne', 'preobrazheniye', 'mullaitivu', 'dunedin', 'paradwip', 'bechyne', 'oranjemund', 'deputatskiy', 'vardo', 'ucluelet', 'saryshagan', 'constitucion', 'samusu', 'moyale', 'brae', 'havoysund', 'jamestown', 'seymchan', 'strezhevoy', 'vernon', 'portland', 'klaksvik', 'horsham', 'marsa+matruh', 'mullingar', 'madaoua', 'nabire', 'north+myrtle+beach', 'havre-saint-pierre', 'rocha', 'half+moon+bay', 'darovskoy', 'guerrero+negro', 'sur', 'qaqortoq', 'ixtapa', 'avera', 'port+augusta', 'hambantota', 'dicabisagan', 'santa+cruz', 'the+valley', 'hornepayne', 'baykit', 'venice', 'beyneu', 'neuquen', 'okha', 'banjar', 'nimaj', 'akom', 'mehamn', 'puerto+escondido', 'manzanillo', 'anito', 'khandyga', 'ola', 'arcachon', 'vila', 'tubruq', 'saint-joseph', 'tres+arroyos', 'catamarca', 'nagua', 'victoria', 'sarangani', 'grindavik', 'yulara', 'gangotri', 'khatanga', 'cockburn+town', 'umm+lajj', 'gravdal', 'manokwari', 'chadiza', 'bouca', 'olga', 'grand+centre', 'hualmay', 'acapulco', 'zhezkazgan', 'yablonovo', 'necochea', 'kholm', 'kabwe', 'banda+aceh', 'bartica', 'adrar', 'arman', 'ajaccio', 'evensk', 'aksha', 'ust-omchug', 'klyuchi', 'kota+kinabalu', 'rafai', 'husavik', 'kahului', 'kushmurun', 'caninde+de+sao+francisco', 'mustasaari', 'alice+springs', 'ampanihy', 'waitakere', 'kaitangata', 'kabelvag', 'kanniyakumari', 'manama', 'santa+isabel', 'abonnema', 'paamiut', 'abu+samrah', 'kozhva', 'progreso', 'sioux+lookout', 'eirunepe', 'masuguru', 'dalmatovo', 'bargal', 'geraldton', 'neftcala', 'waddan', 'ulundi', 'solnechnyy', 'beloha', 'aktau', 'sobolevo', 'caraguatay', 'flinders', 'myaundzha', 'itaituba', 'sabha', 'salisbury', 'xining', 'buala', 'popondetta', 'cabo+san+lucas', 'susangerd', 'juneau', 'mrirt', 'tumannyy', 'buchanan', 'la+palma', 'suda', 'asmara', 'vila+velha', 'hokitika', 'mgachi', 'east+wenatchee+bench', 'northam', 'praya', 'lavrentiya', 'margate', 'carballo', 'tecoanapa', 'lakshettipet', 'bubaque', 'mason+city', 'severo-kurilsk', 'chagda', 'touros', 'bongandanga', 'loikaw', 'presidencia+roque+saenz+pena', 'setermoen', 'broome', 'monywa', 'nunspeet', 'tikri', 'sakakah', 'magadan', 'fort-shevchenko', 'riyadh', 'yarim', 'grand+gaube', 'salalah', 'jaciara', 'katsuura', 'bejar', 'cap+malheureux', 'kurilsk', 'kolpashevo', 'lodja', 'saldanha', 'tingi', 'lypnyazhka', 'fortuna', 'bousso', 'ponta+do+sol', 'zyryanka', 'lazaro+cardenas', 'lorengau', 'pontianak', 'vila+franca+do+campo', 'waingapu', 'yantal', 'marcona', 'beira', 'yanaul', 'kavaratti', 'tendukheda', 'okakarara', 'ler', 'pisco', 'anyama', 'maragogi', 'contamana', 'kloulklubed', 'xam+nua', 'lopatino', 'henties+bay', 'marawi', 'faya', 'severnyy', 'vallenar', 'kununurra', 'leshukonskoye', 'yenagoa', 'san+jose', 'cantaura', 'romitan', 'pangody', 'limbang', 'bayji', 'quelimane', 'padang', 'olkhovka', 'taoudenni', 'aktash', 'lyaskelya', 'manadhoo', 'rancho+palos+verdes', 'pindushi', 'kamenskoye', 'vestbygda', 'rio+gallegos', 'caconda', 'jujuy', 'clacton-on-sea', 'zatoka', 'greenland', 'gusino', 'urusha', 'port-gentil', 'lasa', 'tierranueva', 'port+dickson', 'tambovka', 'sharjah', 'guipavas', 'buraydah', 'todos+santos', 'bathsheba', 'wufeng', 'galgani', 'omboue', 'yerbogachen', 'tallahassee', 'marsaxlokk', 'tuggurt', 'gulfport', 'visegrad', 'vilcun', 'borisoglebsk', 'ilinge', 'coos+bay', 'atambua', 'pimentel', 'merrill', 'beringovskiy', 'bogomila', 'benghazi', 'yabrud', 'mogochin', 'chabahar', 'egvekinot', 'ylojarvi', 'kouqian', 'korla', 'barahona', 'marfino', 'gornyy', 'jamshedpur', 'sao+gabriel+da+cachoeira', 'hay+river', 'dorado', 'orlik', 'wilmington', 'robertsport', 'codrington', 'coahuayana', 'uige', 'kajaani', 'san+lorenzo', 'clarence+town', 'bafata', 'banka', 'itarema', 'gazimagusa', 'ekhabi', 'goderich', 'menongue', 'moerai', 'falun', 'tomatlan', 'garh+maharaja', 'salaga', 'coihaique', 'ojinaga', 'ormara', 'vinzili', 'bonavista', 'astoria', 'agadez', 'mocambique', 'bagdarin', 'tome', 'high+level', 'honningsvag', 'biak', 'ahipara', 'pochutla', 'nishihara', 'kirakira', 'moses+lake', 'evans', 'bima', 'barcelos', 'bauchi', 'khash', 'tabiauea', 'mzimba', 'kendari', 'sola', 'pevek', 'gladstone', 'impfondo', 'kargasok', 'nouadhibou', 'kenai', 'comodoro+rivadavia', 'slave+lake', 'hurghada', 'maracaju', 'biltine', 'torbat-e+jam', 'la+paz', 'campo+verde', 'atar', 'ballina', 'ardakan', 'badou', 'basco', 'saurimo', 'itaqui', 'sechura', 'nizhniy+kuranakh', 'kardla', 'clinton', 'bere', 'mahajanga', 'namatanai', 'sitio+novo+do+tocantins', 'musoma', 'kamenka', 'luwuk', 'ponta+delgada', 'bam', 'sofiysk', 'hinton', 'bandarbeyla', 'sinop', 'salamanca', 'manggar']\n"
     ]
    }
   ],
   "source": [
    "cities_2 = []\n",
    "for city in cities:\n",
    "    if \" \" in city:\n",
    "        city_2 = city.replace(\" \", \"+\")\n",
    "        cities_2.append(city_2)\n",
    "    else:\n",
    "        cities_2.append(city)\n",
    "\n",
    "print(cities_2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Record 1 in set 1 is processing | san+patricio\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 2 in set 1 is processing | erenhot\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 3 in set 1 is processing | saint-philippe\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 4 in set 1 is processing | kodiak\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 5 in set 1 is processing | westport\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 6 in set 1 is processing | kita\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 7 in set 1 is processing | esperance\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 8 in set 1 is processing | punta+arenas\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 9 in set 1 is processing | airai\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 10 in set 1 is processing | sataua\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 11 in set 1 is processing | muisne\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 12 in set 1 is processing | mataura\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 13 in set 1 is processing | bourail\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 14 in set 1 is processing | hobart\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 15 in set 1 is processing | luderitz\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 16 in set 1 is processing | alta+floresta\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 17 in set 1 is processing | thompson\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 18 in set 1 is processing | taolanaro\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 19 in set 1 is processing | vaini\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 20 in set 1 is processing | morgan+city\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 21 in set 1 is processing | chokurdakh\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 22 in set 1 is processing | port+alfred\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 23 in set 1 is processing | mar+del+plata\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 24 in set 1 is processing | nanortalik\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 25 in set 1 is processing | caribou\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 26 in set 1 is processing | hilo\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 27 in set 1 is processing | te+anau\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 28 in set 1 is processing | sao+filipe\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 29 in set 1 is processing | bac+lieu\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 30 in set 1 is processing | talnakh\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 31 in set 1 is processing | avarua\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 32 in set 1 is processing | yatou\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 33 in set 1 is processing | hofn\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 34 in set 1 is processing | san+javier\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 35 in set 1 is processing | busselton\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 36 in set 1 is processing | tasiilaq\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 37 in set 1 is processing | nueva+loja\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 38 in set 1 is processing | mahebourg\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 39 in set 1 is processing | new+norfolk\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 40 in set 1 is processing | victoria+point\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 41 in set 1 is processing | khonuu\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 42 in set 1 is processing | narsaq\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 43 in set 1 is processing | cherbourg\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 44 in set 1 is processing | ostrovnoy\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 45 in set 1 is processing | loubomo\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 46 in set 1 is processing | kaeo\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 47 in set 1 is processing | mount+isa\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 48 in set 1 is processing | aklavik\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 49 in set 1 is processing | nueva+helvecia\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 50 in set 1 is processing | atuona\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 51 in set 1 is processing | cherskiy\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 52 in set 1 is processing | albany\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 53 in set 1 is processing | harstad\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 54 in set 1 is processing | vysokogornyy\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 55 in set 1 is processing | rikitea\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 56 in set 1 is processing | morrelganj\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 57 in set 1 is processing | clarksdale\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 58 in set 1 is processing | ancud\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "Record 59 in set 1 is processing | sorvag\n",
      "http://api.openweathermap.org/data/2.5/weather?appid=d428b3d15bbd55fa725b760b6719de9c&q=\n",
      "[{'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}]\n"
     ]
    }
   ],
   "source": [
    "url = \"http://api.openweathermap.org/data/2.5/weather?\"\n",
    "#units = \"&units=metric\"\n",
    "\n",
    "\n",
    "weather_data = []\n",
    "set_1 = cities_2[0:59]\n",
    "count = 0\n",
    "\n",
    "for city in set_1:\n",
    "    query_url = (url + \"appid=\" + api_key + \"&q=\")# units)\n",
    "    count = count + 1\n",
    "    print(f\"Record {count} in set 1 is processing | {city}\")\n",
    "    print(query_url)\n",
    "    try:     \n",
    "        city_weather_requests = requests.get(query_url+city).json()\n",
    "        weather_data.append(city_data_requests)\n",
    "    except AttributeError: \n",
    "        print(\"city is missing...\")\n",
    "        \n",
    "\n",
    "print(weather_data)\n",
    "        \n",
    "        \n",
    "\n",
    "        \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = \"http://api.openweathermap.org/data/2.5/weather?\"\n",
    "#units = \"&units=metric\"\n",
    "\n",
    "\n",
    "weather_data = []\n",
    "#set_1 = cities[0:59]\n",
    "count = 0\n",
    "\n",
    "for city in set_1[0]:\n",
    "    query_url = (url + \"appid=\" + api_key + \"&q=\" + city)# units)\n",
    "    count = count + 1\n",
    "    print(f\"Record {count} in set 1 is processing | {city}\")\n",
    "    print(query_url)\n",
    "    try:     \n",
    "        city_weather_requests = requests.get(query_url).json()\n",
    "        if city in city_weather_requests:\n",
    "            weather_data.append(city_data_requests)\n",
    "    except AttributeError: \n",
    "        print(\"city is missing...\")\n",
    "        \n",
    "\n",
    "print(weather_data)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[{'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}, {'cod': '404', 'message': 'city not found'}]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print(weather_data)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Convert Raw Data to DataFrame\n",
    "* Export the city data into a .csv.\n",
    "* Display the DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "api_key"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plotting the Data\n",
    "* Use proper labeling of the plots using plot titles (including date of analysis) and axes labels.\n",
    "* Save the plotted figures as .pngs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Temperature Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Humidity Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Cloudiness Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Wind Speed Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  },
  "nteract": {
   "version": "0.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
